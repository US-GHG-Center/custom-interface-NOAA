name: Update data on a schedule

on:
  push:
    branches:
      - update-data  
  schedule:
    - cron: 0 0 1 * * # Runs on the first day of every month
  workflow_dispatch: # Can be run manually if needed

jobs:
  preprocess-data:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Downloads and extracts the files to the respective directory
      - name: Run the data download script
        run: |
          ./download.sh

      # Runs data preprocessing and aggregation
      - name: Run data preprocessing and aggregation
        run: |
          cd ./data_processing
          pip install -r ./requirements.txt
          python3 ./main.py
          python3 ./convert_to_geojson.py
          python3 ./metadata.py

      - name: Upload processed data
        uses: actions/upload-artifact@v4
        with:
          name: processed-geojson
          path: ./data/geojson

      - name : Remove local files
        run: |
          rm -rf ./data
          

  ingest-data:
    runs-on: ubuntu-latest
    needs: preprocess-data
    strategy:
      matrix:
        environment: [development, production]
    environment: ${{ matrix.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Validate required secrets and vars
        run: |
          missing_vars=()
          [ -z "${{ secrets.GITHUB_TOKEN }}" ] && missing_vars+=("secrets.GITHUB_TOKEN")
          [ -z "${{ secrets.SM2A_ADMIN_USERNAME }}" ] && missing_vars+=("secrets.SM2A_ADMIN_USERNAME")
          [ -z "${{ secrets.SM2A_ADMIN_PASSWORD }}" ] && missing_vars+=("secrets.SM2A_ADMIN_PASSWORD")
          [ -z "${{ secrets.DEPLOYMENT_ROLE_ARN }}" ] && missing_vars+=("secrets.DEPLOYMENT_ROLE_ARN")
          [ -z "${{ vars.SM2A_API_URL }}" ] && missing_vars+=("vars.SM2A_API_URL")
          [ -z "${{ vars.DATASET_DAG_NAME }}" ] && missing_vars+=("vars.DATASET_DAG_NAME")
          [ -z "${{ vars.DEPLOYMENT_BUCKET }}" ] && missing_vars+=("vars.DEPLOYMENT_BUCKET")

          if [ ${#missing_vars[@]} -ne 0 ]; then
            echo "Error: The following required secrets or variables are missing:"
            printf '%s\n' "${missing_vars[@]}"
            exit 1
          fi
        shell: bash

      - name: Download processed data
        uses: actions/download-artifact@v4
        with:
          name: processed-geojson
          path: ./data/geojson

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: ${{ github.repository_owner }}
          aws-region: us-west-2

      - name: Upload to S3
        run: |
          aws s3 sync ./data/geojson s3://${{ vars.DEPLOYMENT_BUCKET }}/NOAA_features_API/ --cache-control max-age=30,must-revalidate,s-maxage=604800 --delete

      - name: Remove local files
        run: |
          rm -rf ./data

      - name: Ingest collections to Features API
        run: |
          export GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          export SM2A_ADMIN_USERNAME="${{ secrets.SM2A_ADMIN_USERNAME }}"
          export SM2A_ADMIN_PASSWORD="${{ secrets.SM2A_ADMIN_PASSWORD }}"
          export SM2A_API_URL="${{ vars.SM2A_API_URL }}"
          export DATASET_DAG_NAME="${{ vars.DATASET_DAG_NAME }}"

          pip install -r ./data_processing/ingestion/requirements.txt
          python3 ./data_processing/ingestion/ingest_collection.py ./data_processing/ingestion/NOAA-dag-config.json
